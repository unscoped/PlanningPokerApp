{"version":3,"sources":["shared/model/Message.ts","src/atoms/IconButton.tsx","src/hooks/UrlHandler.ts","ConfigConstants.ts","src/hooks/Room.ts","src/hooks/Theme.ts","src/atoms/Row.tsx","src/styles/Font.ts","src/atoms/AvatarWatermark.tsx","src/atoms/UserName.tsx","src/molecules/ResultCard.tsx","src/molecules/Results.tsx","src/molecules/ValueCard.tsx","src/molecules/VoteValues.tsx","src/Root.tsx","src/styles/Theme.ts","App.tsx","assets/fonts/Poppins-Regular.ttf"],"names":["MessageType","IconTextButton","icon","label","mode","onPress","theme","useTheme","renderIcon","useCallback","props","IconButton","style","margin","color","colors","text","Button","marginHorizontal","accessibilityRole","accent","Text","Colors","send","ws","msg","readyState","WebSocket","OPEN","JSON","stringify","onerror","error","__DEV__","useRoom","rid","key","search","window","location","URLSearchParams","get","undefined","useUrlParam","roomId","id","UUID","toString","Platform","OS","useState","userName","setUserName","voteValue","setVoteValue","userId","setUserId","onOpen","onMessage","onError","useMemo","wss","onopen","onmessage","useEffect","useWebSocket","a","async","AsyncStorage","getItem","storedName","joinRequest","type","JoinRequest","payload","name","joinRoom","event","data","parse","JoinResponse","RoomUpdate","setRoom","room","users","console","log","admin","setName","setNameRequest","SetName","vote","newVoteValue","SetVoteValue","reset","Reset","useSystemDarkMode","Appearance","getColorScheme","isSystemDark","setSystemDark","subscription","addChangeListener","colorScheme","remove","useStyleSheet","createStyleSheet","styles","setStyles","FlexWrapRow","children","View","flexWrapRow","justifyContent","StyleSheet","create","alignItems","alignSelf","flexDirection","flexWrap","marginVertical","fontStyles","body1","fontFamily","fontSize","fontWeight","letterSpacing","body2","button","caption","headline1","headline2","headline3","headline4","headline5","headline6","overline","subtitle1","subtitle2","AvatarWatermark","avatarWatermark","MaterialIcons","position","top","right","UpdatableUserName","value","onChangeText","isActive","setIsActive","inlineInputRef","useRef","toggleIsActive","length","wasActive","current","focus","updatableUserNameContainer","flex","TextInput","ref","paddingHorizontal","onSubmitEditing","TouchableOpacity","buttonText","FixedUserName","userCardSubtitleContainer","numberOfLines","backgroundColor","borderRadius","roundness","marginLeft","paddingVertical","primary","padding","flexShrink","minHeight","userCardTitleContainer","ResultCard","onUserNameChange","resultValue","showAvatar","username","isExtreme","displayValue","Surface","avatarDecoration","resultCard","resultCardTitleContainer","borderWidth","borderColor","elevation","height","overflow","width","Results","sortedUsers","sort","b","voteValueToNumber","minVoteValue","maxVoteValue","map","user","isCurrentUser","v","Number","MAX_SAFE_INTEGER","getColorForValue","dark","DarkDisabled","LightDisabled","DarkZero","LightZero","DarkOne","LightOne","DarkTwo","LightTwo","DarkThree","LightThree","DarkFive","LightFive","DarkEight","LightEight","DarkThirteen","LightThirteen","DarkTwentyOne","LightTwentyOne","DarkUnknown","LightUnknown","ValueCard","isDark","greyedOut","cardColorStyle","onCardPress","Card","valueContainer","valueCard","values","VoteValues","onValuePress","selectedValue","container","Root","toggleTheme","isTabletOrLaptop","useMediaQuery","query","pageTitleStyle","setNameNotUse","newName","setItem","copyUrlToClipboard","roomLink","href","Clipboard","setString","then","savedName","page","canvas","spacedRow","onChange","divider","centerRow","Object","borderBottomColor","borderBottomWidth","maxWidth","light","DefaultTheme","surface","DarkTheme","setIsDark","useFonts","Poppins","require","fontsLoaded","savedIsDark","Theme","module","exports"],"mappings":"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","file":"static/js/app.a50c5d74.chunk.js","sourcesContent":["import { Room } from './Room';\nimport { VoteValue } from './User';\n\nexport type Message =\n  | IJoinRequestMessage\n  | IJoinResponseMessage\n  | ILeaveRequestMessage\n  | IResetMessage\n  | IRoomUpdateMessage\n  | ISetNameMessage\n  | ISetVoteValueMessage;\n\nexport enum MessageType {\n  JoinRequest = 'JoinRequest',\n  JoinResponse = 'JoinResponse',\n  LeaveRequest = 'LeaveRequest',\n  Reset = 'Reset',\n  RoomUpdate = 'RoomUpdate',\n  SetName = 'SetName',\n  SetVoteValue = 'SetVoteValue',\n}\n\nexport interface IJoinRequestMessage {\n  type: MessageType.JoinRequest;\n  roomId: string;\n  payload: {\n    name: string;\n  };\n}\n\nexport interface IJoinResponseMessage {\n  type: MessageType.JoinResponse;\n  roomId: string;\n  payload: {\n    userId: string;\n  };\n}\n\nexport interface ISetVoteValueMessage {\n  type: MessageType.SetVoteValue;\n  roomId: string;\n  payload: {\n    voteValue: VoteValue;\n  };\n}\n\nexport interface ISetNameMessage {\n  type: MessageType.SetName;\n  roomId: string;\n  payload: {\n    name: string;\n  };\n}\n\nexport interface ILeaveRequestMessage {\n  type: MessageType.LeaveRequest;\n  roomId: string;\n}\n\nexport interface IRoomUpdateMessage {\n  type: MessageType.RoomUpdate;\n  roomId: string;\n  payload: {\n    room: Room;\n  };\n}\n\nexport interface IResetMessage {\n  type: MessageType.Reset;\n  roomId: string;\n}\n","import React, { useCallback } from 'react';\nimport { Button, IconButton, Text, useTheme } from 'react-native-paper';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\n\ninterface IProps {\n  icon: IconSource;\n  label: string;\n  mode?: 'text' | 'outlined' | 'contained' | undefined;\n  onPress: () => void;\n}\n\nexport const IconTextButton: React.FC<IProps> = ({\n  icon,\n  label,\n  mode,\n  onPress,\n}) => {\n  const theme = useTheme();\n\n  const renderIcon: IconSource = useCallback(\n    (props) => (\n      <IconButton\n        {...props}\n        style={{ margin: 0 }}\n        color={theme.colors.text}\n        icon={icon}\n      />\n    ),\n    [icon, theme.colors.text],\n  );\n\n  return (\n    <Button\n      style={{ marginHorizontal: 8 }}\n      accessibilityRole={'button'}\n      color={theme.colors.accent}\n      icon={renderIcon}\n      mode={mode}\n      onPress={onPress}\n    >\n      <Text>{label}</Text>\n    </Button>\n  );\n};\n","export const useUrlParam = (key: string) => {\n  const search = window.location.search;\n\n  const params = new URLSearchParams(search);\n\n  return params.get(key) || undefined;\n};\n","export enum Colors {\n  // Linear gradient color steps (9) generated using https://colordesigner.io/gradient-generator.\n  DarkZero = '#292d3d', // Dark theme primary color\n  DarkOne = '#37324e',\n  DarkTwo = '#4d355b',\n  DarkThree = '#693462',\n  DarkFive = '#853161',\n  DarkEight = '#a02d59',\n  DarkThirteen = '#b62e49',\n  DarkTwentyOne = '#c63834',\n  DarkUnknown = '#cd4b13', // Dark theme accent color\n  DarkDisabled = '#333',\n  // Linear gradient color steps (9) generated using https://colordesigner.io/gradient-generator.\n  LightZero = '#eaeaeb', // Light theme primary color\n  LightOne = '#e4deec',\n  LightTwo = '#e5d1e9',\n  LightThree = '#ebc2e0',\n  LightFive = '#f4b2cf',\n  LightEight = '#fba2b7',\n  LightThirteen = '#fe949a',\n  LightTwentyOne = '#fb8978',\n  LightUnknown = '#ef8354', // Light theme accent color\n  LightDisabled = '#ccc',\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport UUID from 'pure-uuid';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Platform } from 'react-native';\n\nimport {\n  IJoinRequestMessage,\n  IResetMessage,\n  ISetNameMessage,\n  ISetVoteValueMessage,\n  MessageType,\n} from '../../shared/model/Message';\nimport { Room } from '../../shared/model/Room';\nimport { VoteValue } from '../../shared/model/User';\n\nimport { useUrlParam } from './UrlHandler';\n\n// Connect to Heroku 🧙‍♂️ (Update the port)\nconst SERVER_HOST = __DEV__\n  ? 'ws://localhost:8999'\n  : 'wss://planningpokerserver.herokuapp.com/';\n\nconst createEmptyRoom = (id: string): Room => ({\n  id,\n  name: '',\n  users: {},\n  admin: undefined,\n});\n\nconst send = (ws: WebSocket, msg: any) => {\n  if (ws.readyState === WebSocket.OPEN) {\n    ws.send(JSON.stringify(msg));\n  }\n};\n\nconst onerror = (error: Event) => {\n  if (__DEV__) {\n    // eslint-disable-next-line no-console\n    console.error('Error: ', error);\n  }\n  // setErrorMessage({ title: 'Oops!', message: 'Something went wrong...' });\n};\n\nconst useWebSocket = (\n  onOpen: () => void,\n  onMessage: (event: WebSocketMessageEvent) => void,\n  onError: (error: Event) => void,\n) => {\n  const ws = useMemo(() => {\n    const wss = new WebSocket(SERVER_HOST);\n\n    wss.onopen = onOpen;\n    wss.onmessage = onMessage;\n    wss.onerror = onError;\n\n    return wss;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    ws.onmessage = onMessage;\n  }, [onMessage, ws]);\n\n  useEffect(() => {\n    ws.onerror = onError;\n  }, [onError, ws]);\n\n  return ws;\n};\n\nexport const useRoom = () => {\n  const rid = useUrlParam('roomId');\n  const roomId = (() => {\n    if (rid) {\n      return rid;\n    }\n    const id = new UUID(4).toString();\n    if (Platform.OS === 'web') {\n      window.location.search = 'roomId=' + id;\n    }\n    return id;\n  })();\n  const [userName, setUserName] = useState('Guest');\n  const [voteValue, setVoteValue] = useState<VoteValue>();\n  const [userId, setUserId] = useState<string>();\n\n  const onopen = useCallback(() => {\n    const joinRoom = async () => {\n      if (__DEV__) {\n        // eslint-disable-next-line no-console\n        console.log('Opened WebSocket connection');\n      }\n\n      const storedName = await AsyncStorage.getItem('username');\n\n      const joinRequest: IJoinRequestMessage = {\n        type: MessageType.JoinRequest,\n        roomId,\n        payload: {\n          name: storedName ?? 'Guest',\n        },\n      };\n      send(ws, joinRequest);\n    };\n\n    joinRoom();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onmessage = useCallback(\n    (event: WebSocketMessageEvent) => {\n      if (event.data === 'Heartbeat') {\n        // eslint-disable-next-line no-console\n        console.log('Received heartbeat from server');\n        return;\n      }\n\n      try {\n        const msg = JSON.parse(event.data);\n\n        if (__DEV__) {\n          // eslint-disable-next-line no-console\n          console.log('Received message: ', msg);\n        }\n\n        switch (msg.type) {\n          case MessageType.JoinResponse: {\n            setUserId(msg.payload.userId);\n            break;\n          }\n          case MessageType.RoomUpdate: {\n            if (__DEV__) {\n              // eslint-disable-next-line no-console\n              console.log('Updating room');\n            }\n            setRoom(msg.payload.room);\n            if (\n              userId &&\n              msg.payload.room.users[userId].voteValue !== 'hidden'\n            ) {\n              setVoteValue(msg.payload.room.users[userId].voteValue);\n            }\n            break;\n          }\n          default:\n        }\n      } catch {\n        // eslint-disable-next-line no-console\n        console.error('Error while parsing JSON', event.data);\n      }\n    },\n    [userId],\n  );\n\n  const ws = useWebSocket(onopen, onmessage, onerror);\n\n  const [room, setRoom] = useState(\n    createEmptyRoom(roomId || new UUID(4).toString()),\n  );\n\n  const setName = useCallback(\n    (name: string) => {\n      setUserName(name);\n      const setNameRequest: ISetNameMessage = {\n        type: MessageType.SetName,\n        roomId: room.id,\n        payload: {\n          name,\n        },\n      };\n      send(ws, setNameRequest);\n    },\n    [room.id, ws],\n  );\n\n  const vote = useCallback(\n    (newVoteValue: VoteValue) => {\n      setVoteValue(newVoteValue);\n      const msg: ISetVoteValueMessage = {\n        type: MessageType.SetVoteValue,\n        roomId: room.id,\n        payload: {\n          voteValue: newVoteValue,\n        },\n      };\n      send(ws, msg);\n    },\n    [room.id, ws],\n  );\n\n  const reset = useCallback(() => {\n    setVoteValue(undefined);\n    const msg: IResetMessage = {\n      type: MessageType.Reset,\n      roomId: room.id,\n    };\n    send(ws, msg);\n  }, [room.id, ws]);\n\n  return {\n    name: userName,\n    reset,\n    room,\n    setName,\n    userId,\n    vote,\n    voteValue,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { Appearance } from 'react-native-appearance';\nimport { useTheme } from 'react-native-paper';\nimport { Theme } from 'react-native-paper/lib/typescript/types';\n\nexport const useSystemDarkMode = (): boolean => {\n  const [isSystemDark, setSystemDark] = useState<boolean>(\n    Appearance.getColorScheme() === 'dark',\n  );\n\n  useEffect(() => {\n    const subscription = Appearance.addChangeListener(({ colorScheme }) => {\n      setSystemDark(colorScheme === 'dark');\n    });\n\n    return () => subscription.remove();\n  }, []);\n\n  return isSystemDark;\n};\n\nexport const useManualDarkMode = () => {\n  const isSystemDark = useSystemDarkMode();\n  const [isDark, setIsDark] = useState(isSystemDark);\n\n  useEffect(() => {\n    setIsDark(isSystemDark);\n  }, [isSystemDark]);\n\n  return [isDark, setIsDark];\n};\n\nexport const useStyleSheet = <T>(createStyleSheet: (theme: Theme) => T) => {\n  const theme = useTheme();\n  const [styles, setStyles] = useState<T>(createStyleSheet(theme));\n\n  useEffect(() => {\n    setStyles(createStyleSheet(theme));\n  }, [createStyleSheet, theme]);\n\n  return styles;\n};\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\ntype FlexWrapRowProps = {\n  mode?:\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly';\n};\n\nexport const FlexWrapRow: React.FC<FlexWrapRowProps> = ({ children, mode }) => {\n  return (\n    <View style={[styles.flexWrapRow, { justifyContent: mode }]}>\n      {children}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  flexWrapRow: {\n    alignItems: 'center',\n    alignSelf: 'stretch',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginVertical: 16,\n  },\n});\n","import { StyleSheet } from 'react-native';\n\nexport const fontStyles = StyleSheet.create({\n  body1: {\n    fontFamily: 'Poppins',\n    fontSize: 16,\n    fontWeight: '400',\n    letterSpacing: 0.5,\n  },\n  body2: {\n    fontFamily: 'Poppins',\n    fontSize: 14,\n    fontWeight: '400',\n    letterSpacing: 0.25,\n  },\n  button: {\n    fontFamily: 'Poppins',\n    fontSize: 14,\n    fontWeight: '500',\n    letterSpacing: 1.25,\n  },\n  caption: {\n    fontFamily: 'Poppins',\n    fontSize: 12,\n    fontWeight: '400',\n    letterSpacing: 0.4,\n  },\n  headline1: {\n    fontFamily: 'Poppins',\n    fontSize: 96,\n    fontWeight: '300',\n    letterSpacing: -1.5,\n  },\n  headline2: {\n    fontFamily: 'Poppins',\n    fontSize: 60,\n    fontWeight: '300',\n    letterSpacing: -0.5,\n  },\n  headline3: {\n    fontFamily: 'Poppins',\n    fontSize: 48,\n    fontWeight: '700',\n    letterSpacing: 0,\n  },\n  headline4: {\n    fontFamily: 'Poppins',\n    fontSize: 36,\n    fontWeight: '500',\n    letterSpacing: 0.25,\n  },\n  headline5: {\n    fontFamily: 'Poppins',\n    fontSize: 24,\n    fontWeight: '400',\n    letterSpacing: 0,\n  },\n  headline6: {\n    fontFamily: 'Poppins',\n    fontSize: 20,\n    fontWeight: '500',\n    letterSpacing: 0.15,\n  },\n  overline: {\n    fontFamily: 'Poppins',\n    fontSize: 10,\n    fontWeight: '400',\n    letterSpacing: 1.5,\n  },\n  subtitle1: {\n    fontFamily: 'Poppins',\n    fontSize: 16,\n    fontWeight: '400',\n    letterSpacing: 0.15,\n  },\n  subtitle2: {\n    fontFamily: 'Poppins',\n    fontSize: 14,\n    fontWeight: '500',\n    letterSpacing: 0.1,\n  },\n});\n","import { MaterialIcons } from '@expo/vector-icons';\nimport React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useTheme } from 'react-native-paper';\nimport { Theme } from 'react-native-paper/lib/typescript/types';\n\nimport { useStyleSheet } from '../hooks/Theme';\nimport { fontStyles } from '../styles/Font';\n\nexport const AvatarWatermark: React.FC = () => {\n  const theme = useTheme();\n  const styles = useStyleSheet(createStyleSheet);\n  return (\n    <View style={styles.avatarWatermark}>\n      <MaterialIcons\n        color={theme.colors.accent}\n        style={fontStyles.body2}\n        name={'person'}\n      />\n    </View>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    avatarWatermark: {\n      position: 'absolute',\n      top: 4,\n      right: 4,\n    },\n  });\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { StyleSheet, TextInput, TouchableOpacity, View } from 'react-native';\nimport { Text, useTheme } from 'react-native-paper';\nimport { Theme } from 'react-native-paper/lib/typescript/types';\n\nimport { useStyleSheet } from '../hooks/Theme';\nimport { fontStyles } from '../styles/Font';\n\ntype UpdatableUserNameProps = {\n  value?: string;\n  onChangeText: (text: string) => void;\n};\n\nexport const UpdatableUserName: React.FC<UpdatableUserNameProps> = ({\n  value,\n  onChangeText,\n}) => {\n  const theme = useTheme();\n  const styles = useStyleSheet(createStyleSheet);\n  const [isActive, setIsActive] = useState<boolean>(false);\n  const inlineInputRef = useRef<TextInput>(null);\n\n  const toggleIsActive = useCallback(() => {\n    if (value?.length === 0) {\n      onChangeText('Guest');\n    }\n    setIsActive((wasActive) => !wasActive);\n  }, [onChangeText, value]);\n\n  useEffect(() => {\n    if (isActive) {\n      // Imperative method used to focus the text input\n      // eslint-disable-next-line no-unused-expressions\n      inlineInputRef.current?.focus();\n    }\n  }, [isActive]);\n\n  if (!isActive) {\n    return (\n      <TouchableOpacity onPress={toggleIsActive}>\n        <FixedUserName userName={value} />\n      </TouchableOpacity>\n    );\n  }\n\n  return (\n    <View style={styles.updatableUserNameContainer}>\n      <View style={{ flex: 1 }}>\n        <TextInput\n          ref={inlineInputRef}\n          style={{ paddingHorizontal: 4, color: theme.colors.text }}\n          value={value}\n          onChangeText={onChangeText}\n          onSubmitEditing={toggleIsActive}\n        />\n      </View>\n      <TouchableOpacity onPress={toggleIsActive} style={styles.button}>\n        <Text style={[fontStyles.overline, styles.buttonText]}>{'OK'}</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport const FixedUserName: React.FC<{ userName?: string }> = ({\n  userName,\n}) => {\n  const styles = useStyleSheet(createStyleSheet);\n  return (\n    <View style={styles.userCardSubtitleContainer}>\n      <Text style={fontStyles.body2} numberOfLines={1}>\n        {userName}\n      </Text>\n    </View>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    button: {\n      backgroundColor: theme.colors.accent,\n      borderRadius: theme.roundness,\n      marginLeft: 8,\n      paddingHorizontal: 8,\n      paddingVertical: 4,\n    },\n    buttonText: {\n      fontWeight: '900',\n    },\n    updatableUserNameContainer: {\n      alignItems: 'center',\n      backgroundColor: theme.colors.primary,\n      flexDirection: 'row',\n      padding: 4,\n    },\n    userCardSubtitleContainer: {\n      alignItems: 'center',\n      backgroundColor: theme.colors.primary,\n      flexShrink: 1,\n      minHeight: 32,\n      paddingHorizontal: 4,\n      paddingVertical: 8,\n    },\n    userCardTitleContainer: {\n      alignItems: 'center',\n      flex: 1,\n      justifyContent: 'center',\n    },\n  });\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Surface, Text } from 'react-native-paper';\nimport { Theme } from 'react-native-paper/lib/typescript/types';\n\nimport { VoteValue } from '../../shared/model/User';\nimport { AvatarWatermark } from '../atoms/AvatarWatermark';\nimport { FixedUserName, UpdatableUserName } from '../atoms/UserName';\nimport { useStyleSheet } from '../hooks/Theme';\nimport { fontStyles } from '../styles/Font';\n\ntype Props = {\n  showAvatar: boolean;\n  resultValue: VoteValue;\n  username: string;\n  isExtreme: boolean;\n  onUserNameChange: (text: string) => void;\n};\n\nexport const ResultCard: React.FC<Props> = ({\n  onUserNameChange,\n  resultValue,\n  showAvatar,\n  username,\n  isExtreme,\n}) => {\n  const styles = useStyleSheet(createStyleSheet);\n\n  const displayValue =\n    resultValue && resultValue !== 'hidden' ? resultValue : '?';\n\n  return (\n    <Surface\n      style={[\n        showAvatar && styles.avatarDecoration,\n        styles.resultCard,\n        isExtreme && styles.isExtreme,\n      ]}\n    >\n      {showAvatar && <AvatarWatermark />}\n      <View style={styles.resultCardTitleContainer}>\n        <Text style={fontStyles.headline4}>{displayValue}</Text>\n      </View>\n      {showAvatar ? (\n        <UpdatableUserName value={username} onChangeText={onUserNameChange} />\n      ) : (\n        <FixedUserName userName={username} />\n      )}\n    </Surface>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    avatarDecoration: {\n      borderWidth: 2,\n      borderColor: theme.colors.primary,\n    },\n    isExtreme: {\n      borderColor: theme.colors.accent,\n    },\n    resultCard: {\n      borderRadius: theme.roundness * 2,\n      elevation: 8,\n      height: 112,\n      margin: 8,\n      overflow: 'hidden',\n      width: 96,\n    },\n    resultCardTitleContainer: {\n      alignItems: 'center',\n      flex: 1,\n      justifyContent: 'center',\n    },\n  });\n","import React from 'react';\n\nimport { User, VoteValue } from '../../shared/model/User';\nimport { FlexWrapRow } from '../atoms/Row';\n\nimport { ResultCard } from './ResultCard';\n\ntype Props = {\n  users: User[];\n  userId?: string;\n  userName?: string;\n  onUserNameChange: (text: string) => void;\n};\n\nexport const Results: React.FC<Props> = ({\n  users,\n  userId,\n  userName,\n  onUserNameChange,\n}) => {\n  const sortedUsers = users.sort(\n    (a: User, b: User) =>\n      voteValueToNumber(a.voteValue) - voteValueToNumber(b.voteValue),\n  );\n  const minVoteValue = sortedUsers.length ? sortedUsers[0].voteValue : 0;\n  const maxVoteValue = sortedUsers.length\n    ? sortedUsers[sortedUsers.length - 1].voteValue\n    : 0;\n  return (\n    <FlexWrapRow mode=\"center\">\n      {sortedUsers.map((user) => {\n        const isCurrentUser = user.id === userId;\n        const isDisplayValue =\n          user.voteValue !== undefined && user.voteValue !== 'hidden';\n        const isExtreme =\n          isDisplayValue &&\n          minVoteValue !== maxVoteValue &&\n          (user.voteValue === minVoteValue || user.voteValue === maxVoteValue);\n        return (\n          <ResultCard\n            key={user.id}\n            resultValue={user.voteValue}\n            showAvatar={isCurrentUser}\n            username={userId === user.id && userName ? userName : user.userName}\n            isExtreme={isExtreme}\n            onUserNameChange={onUserNameChange}\n          />\n        );\n      })}\n    </FlexWrapRow>\n  );\n};\n\nconst voteValueToNumber = (v: VoteValue) => {\n  switch (typeof v) {\n    case 'number':\n      return v;\n    default:\n      return Number.MAX_SAFE_INTEGER;\n  }\n};\n","import React, { useCallback } from 'react';\nimport { StyleSheet, View, ViewStyle } from 'react-native';\nimport { Card, Text } from 'react-native-paper';\nimport { Theme } from 'react-native-paper/lib/typescript/types';\n\nimport { Colors } from '../../ConfigConstants';\nimport { VoteValue } from '../../shared/model/User';\nimport { useStyleSheet } from '../hooks/Theme';\nimport { fontStyles } from '../styles/Font';\n\ntype Props = {\n  value: VoteValue;\n  onPress: (value: VoteValue) => void;\n  isDark: boolean;\n  greyedOut: boolean;\n};\nconst getColorForValue = (value: VoteValue, dark: boolean): Colors => {\n  switch (value) {\n    case -1:\n      return dark ? Colors.DarkDisabled : Colors.LightDisabled;\n    case 0:\n      return dark ? Colors.DarkZero : Colors.LightZero;\n    case 1:\n      return dark ? Colors.DarkOne : Colors.LightOne;\n    case 2:\n      return dark ? Colors.DarkTwo : Colors.LightTwo;\n    case 3:\n      return dark ? Colors.DarkThree : Colors.LightThree;\n    case 5:\n      return dark ? Colors.DarkFive : Colors.LightFive;\n    case 8:\n      return dark ? Colors.DarkEight : Colors.LightEight;\n    case 13:\n      return dark ? Colors.DarkThirteen : Colors.LightThirteen;\n    case 21:\n      return dark ? Colors.DarkTwentyOne : Colors.LightTwentyOne;\n    default:\n      return dark ? Colors.DarkUnknown : Colors.LightUnknown;\n  }\n};\n\nexport const ValueCard: React.FC<Props> = ({\n  value,\n  onPress,\n  isDark,\n  greyedOut,\n}) => {\n  const styles = useStyleSheet(createStyleSheet);\n  const cardColorStyle: ViewStyle = {\n    backgroundColor: greyedOut\n      ? getColorForValue(-1, isDark)\n      : getColorForValue(value, isDark),\n  };\n  const onCardPress = useCallback(() => onPress(value), [onPress, value]);\n\n  return (\n    <Card style={[styles.valueContainer, cardColorStyle]} onPress={onCardPress}>\n      <View style={styles.valueCard}>\n        <Text style={[fontStyles.subtitle1, { fontWeight: '900' }]}>\n          {value}\n        </Text>\n      </View>\n    </Card>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    valueCard: {\n      alignItems: 'center',\n      borderRadius: 8,\n      height: 50,\n      justifyContent: 'center',\n      width: 50,\n    },\n    valueContainer: {\n      marginHorizontal: 8,\n      elevation: 4,\n      marginVertical: 4,\n    },\n  });\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Theme } from 'react-native-paper/lib/typescript/types';\n\nimport { VoteValue } from '../../shared/model/User';\nimport { useStyleSheet } from '../hooks/Theme';\n\nimport { ValueCard } from './ValueCard';\n\nconst values: VoteValue[] = [0, 1, 2, 3, 5, 8, 13, 21, '🤔'];\n\ntype ValuesProps = {\n  onValuePress: (value: VoteValue) => void;\n  selectedValue: VoteValue | undefined;\n  isDark: boolean;\n};\n\nexport const VoteValues: React.FC<ValuesProps> = ({\n  onValuePress,\n  selectedValue,\n  isDark,\n}) => {\n  const styles = useStyleSheet(createStyleSheet);\n\n  return (\n    <View style={styles.container}>\n      {values.map((value) => (\n        <ValueCard\n          key={value}\n          value={value}\n          onPress={onValuePress}\n          isDark={isDark}\n          greyedOut={selectedValue !== undefined && selectedValue !== value}\n        />\n      ))}\n    </View>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    container: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n      width: '100%',\n    },\n  });\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport Clipboard from '@react-native-clipboard/clipboard';\nimport Switch from 'expo-dark-mode-switch';\nimport React, { useCallback, useEffect } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Surface, Text } from 'react-native-paper';\nimport { Theme } from 'react-native-paper/lib/typescript/types';\nimport { useMediaQuery } from 'react-responsive';\n\nimport { IconTextButton } from './atoms/IconButton';\nimport { useRoom } from './hooks/Room';\nimport { useStyleSheet } from './hooks/Theme';\nimport { Results } from './molecules/Results';\nimport { VoteValues } from './molecules/VoteValues';\nimport { fontStyles } from './styles/Font';\n\ntype Props = {\n  isDark: boolean;\n  toggleTheme: () => void;\n};\n\nexport const Root: React.FC<Props> = ({ isDark, toggleTheme }) => {\n  const styles = useStyleSheet(createStyleSheet);\n  const isTabletOrLaptop = useMediaQuery({\n    query: '(min-device-width: 600px)',\n  });\n\n  const pageTitleStyle = isTabletOrLaptop\n    ? fontStyles.headline3\n    : fontStyles.headline4;\n\n  const {\n    name,\n    setName: setNameNotUse,\n    voteValue,\n    vote,\n    room,\n    userId,\n    reset,\n  } = useRoom();\n\n  const setName = useCallback(\n    (newName: string) => {\n      setNameNotUse(newName);\n      AsyncStorage.setItem('username', newName);\n    },\n    [setNameNotUse],\n  );\n\n  const copyUrlToClipboard = useCallback(() => {\n    const roomLink = window.location.href;\n    Clipboard.setString(roomLink);\n  }, []);\n\n  useEffect(() => {\n    AsyncStorage.getItem('username').then((savedName) => {\n      if (savedName) {\n        setName(savedName);\n      }\n    });\n  }, [setName]);\n\n  return (\n    <Surface style={styles.page}>\n      <Surface\n        style={[styles.canvas, { width: isTabletOrLaptop ? '90%' : '100%' }]}\n      >\n        <Text style={pageTitleStyle}>{'Planning Poker 🎲'}</Text>\n        <View style={styles.spacedRow}>\n          <IconTextButton\n            icon=\"share\"\n            label=\"Share room\"\n            mode=\"outlined\"\n            onPress={copyUrlToClipboard}\n          />\n          <Switch value={isDark} onChange={toggleTheme} />\n        </View>\n\n        <View style={styles.divider} />\n        <View style={styles.centerRow}>\n          <IconTextButton\n            icon=\"replay\"\n            label=\"Reset\"\n            mode=\"contained\"\n            onPress={reset}\n          />\n        </View>\n        <VoteValues\n          onValuePress={vote}\n          isDark={isDark}\n          selectedValue={voteValue}\n        />\n        <Results\n          users={Object.values(room.users)}\n          userId={userId}\n          userName={name}\n          onUserNameChange={setName}\n        />\n      </Surface>\n    </Surface>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    canvas: {\n      alignItems: 'center',\n      height: '100%',\n      paddingHorizontal: 16,\n      paddingVertical: 16,\n    },\n    centerRow: {\n      width: '100%',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n      paddingVertical: 8,\n    },\n    divider: {\n      alignSelf: 'stretch',\n      borderBottomColor: theme.colors.primary,\n      borderBottomWidth: 2,\n    },\n    page: {\n      alignItems: 'center',\n      backgroundColor: theme.colors.primary,\n      flex: 1,\n    },\n    spacedRow: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'space-between',\n      maxWidth: 375,\n      paddingVertical: 8,\n      width: '100%',\n    },\n  });\n","import { DarkTheme, DefaultTheme } from 'react-native-paper';\nimport { Theme } from 'react-native-paper/lib/typescript/types';\n\nconst light: Theme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    accent: '#ef8354',\n    primary: '#eaeaeb',\n    surface: '#bfc0c0',\n    text: '#000000',\n  },\n};\n\nconst dark: Theme = {\n  ...DarkTheme,\n  colors: {\n    ...DarkTheme.colors,\n    accent: '#cd4b13',\n    primary: '#292d3d',\n    surface: '#323a49',\n    text: '#ffffff',\n  },\n};\n\nexport default { light, dark };\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useFonts } from '@use-expo/font';\nimport AppLoading from 'expo-app-loading';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { AppearanceProvider } from 'react-native-appearance';\nimport { Provider as PaperProvider } from 'react-native-paper';\n\nimport { Root } from './src/Root';\nimport { useSystemDarkMode } from './src/hooks/Theme';\nimport Theme from './src/styles/Theme';\n\nexport default () => {\n  const isSystemDark = useSystemDarkMode();\n  const [isDark, setIsDark] = useState(isSystemDark);\n\n  const [fontsLoaded] = useFonts({\n    Poppins: require('./assets/fonts/Poppins-Regular.ttf'),\n  });\n\n  const toggleTheme = useCallback(() => {\n    setIsDark(!isDark);\n    AsyncStorage.setItem('isDark', JSON.stringify(!isDark));\n  }, [isDark, setIsDark]);\n\n  useEffect(() => {\n    AsyncStorage.getItem('isDark').then((savedIsDark) => {\n      if (savedIsDark) setIsDark(JSON.parse(savedIsDark));\n    });\n  }, []);\n\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  }\n\n  return (\n    <AppearanceProvider>\n      <PaperProvider theme={isDark ? Theme.dark : Theme.light}>\n        <Root isDark={isDark} toggleTheme={toggleTheme} />\n      </PaperProvider>\n    </AppearanceProvider>\n  );\n};\n","module.exports = __webpack_public_path__ + \"./fonts/Poppins-Regular.ttf\";"],"sourceRoot":""}